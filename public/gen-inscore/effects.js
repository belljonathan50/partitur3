const { Console } = require('console');
const fs = require('fs');


let soprano = [1.010412, 2.747, 4.73, 6.467, 8.548, 10.285, 14.612, 16.349, 18.43, 20.167, 24.805, 26.542, 28.622, 30.359, 32.44, 34.177, 36.562, 40.29, 41.765, 43.502, 45.83, 49.557, 50.977, 52.714, 54.795, 56.532, 58.612, 60.349, 63.574, 68.855, 70.575, 72.295, 76.397, 79.27, 79.668, 83.181, 84.923, 87.398, 87.450547, 89.807, 94.297742, 96.297, 98.168576, 100.168, 99.873, 102.787, 102.758, 105.706, 106.407, 107.383, 108.814694, 109.719, 111.020728, 111.925, 114.195278, 117.947, 118.907, 119.869, 121.192, 123.192, 124.417171, 125.464, 126.619401, 128.619, 128.398238, 131.994, 132.805, 137.374, 137.724, 143.005, 144.725, 146.445, 147.812, 151.751, 152.015, 153.629, 153.904, 158.473, 158.65, 163.931, 165.719, 167.439, 168.844664, 172.643, 172.701622, 176.993, 177.353391, 180.253, 180.410372, 183.351, 183.589461, 189.017, 189.31438, 192.352, 195.086042, 196.84, 201.083707, 202.82, 204.366665, 208.301, 211.960766, 214.96, 216.410626, 219.31, 219.426748, 222.326, 223.842, 227.609, 230.479, 236.07, 237.42, 238., 242.015222, 245.782, 247.506, 252.075, 252.594355, 256.361, 257.567, 262.165, 262.322, 266.093, 266.567, 270.517, 276.936588, 277.532, 279.904147, 283.171, 283.407066, 286.674, 286.650644, 289.917, 289.78879, 293.055, 293.214067, 294.934, 295.542, 298.359, 298.881342, 300.718, 300.768, 305.845, 306.327027, 308.047, 308.77, 310.361, 310.793, 316.494, 316.767664, 320.637, 321.115, 326.816, 326.679558, 327.275, 327.926678, 335.151, 337.958488, 339.678, 342.953, 347.48, 349.8, 354.493, 354.702226, 355.282, 356.886766, 360.643, 360.874532, 364.436, 364.622253, 367.987, 368.094, 369.766, 370.856167, 374.375, 375.193095, 378.712, 380.332, 382.004, 382.437096, 384.803, 385.1, 387.465, 388.218, 390.584, 394.675, 395.257, 397.124, 399.627, 400.43, 402.15, 404., 406.947, 407.188645, 410.136, 409.581645, 412.529, 413.015645, 415.963, 415.584, 418.949, 419.196072, 421.779, 422.841615, 425.424, 425.264, 426.609, 427.193, 428.178, 428.392, 429.737, 430.213, 432.213, 436.438, 437.423, 437.638, 438.983, 439.458, 441.458, 441.231472, 444.959, 445.150737, 447.251, 448.845, 449.83, 450.044, 451.389, 451.973, 452.958, 453.172, 454.517, 454.993, 456.993, 458.245163, 462.476, 471.363, 474.668, 475.604527, 476.58, 478.088, 480.068, 480.62263, 481.598, 483.652, 486.957, 488.308, 490.288, 493.355, 494.331, 497.225, 498.201, 500.545, 503.85, 504.73, 507.513, 506.604, 509.387, 509.264, 514.965, 515.03018, 516.805, 516.330728, 519.113, 519.20862, 521.507, 521.557882, 525.784, 525.9, 527.854, 527.888663, 530.281, 530.931821, 535.507, 535.677, 541.022, 543.316, 546.985, 549.69206, 556.15, 556.675, 563.133, 563.412357, 569.95, 571.465357, 575.134, 577.593157, 582.846, 583.809755, 585.584, 587.076445, 588.115, 589.202, 591.683, 591.701613, 593.872, 594.477, 597.95, 600.04, 605.293, 607.404, 611.171, 612.951, 615.432, 617.478, 621.186, 623.237, 626.906, 630.511652, 637.309, 638.587031, 642.256, 647.566031, 654.364];
let mezzo = [2.1, 5.46, 5.912, 9.272, 9.73, 14.09, 15.776, 19.136, 19.612, 23.972, 25.987, 29.347, 29.804, 33.164, 33.622, 36.511, 36.577, 37.673, 42.947, 45.724, 45.789, 46.885, 52.159, 55.519, 55.977, 59.337, 59.794, 64.154, 65.372, 70.545, 72.243, 73.66, 73.655246, 73.655, 74.686, 78.179, 82.918781, 84.917, 84.977, 86.509, 87.489529, 89.926, 91.376792, 94.986, 95.389626, 98.999, 100.023, 101.555, 103.384, 105.821, 106.791, 109.047, 109.056937, 111.312, 109.136, 111.392, 111.745, 113.745, 114.202, 117.852, 119.22, 121.476, 121.83, 123.83, 124.636, 126.892, 127.246, 129.246, 129.16, 132.773, 134.079, 138.435, 139.574061, 144.43, 146.393, 147.87, 147.867, 151.504, 151.566484, 152.354, 155.079, 159.145, 160.38061, 166.387, 167.319, 168.796, 168.793, 172.59, 172.449, 177.17, 178.171, 178.776, 179.229, 180.239, 181.197, 181.802, 182.255, 183.265, 185.058522, 186.17, 187.4152, 188.769, 191.973662, 195.59, 196.496471, 200.263, 202.265724, 204.257, 204.289074, 206.926, 208.330344, 214.469, 215.311, 216.665, 217.278, 218.235, 218.287, 219.641, 220.304, 221.261, 222.078, 223.944, 227.335744, 229.935, 229.982, 233.465, 236.621, 240.338, 240.295, 242.147, 245.521, 247.81, 248.869, 252.935, 255.789, 258.078, 258.885, 262.951, 264.062, 267.605, 268.306949, 271.274, 276.132, 279.849, 281.30386, 284.375, 284.460184, 287.659, 287.797682, 290.996, 291.428067, 294.918, 296.912, 300.405, 301.137, 304.656, 305.503027, 308.471, 310.792, 314.311, 314.799, 318.318, 320.389, 323.908, 325.87497, 329.591, 329.245993, 334.462, 336.634488, 339.393, 339.669, 346.21, 347.781, 353.05, 353.903226, 357.62, 358.027147, 361.4, 361.44, 364.812, 365.161285, 370.374, 370.481801, 375.558, 375.795254, 380.589, 382.015542, 383.728, 384.278475, 385.991, 387.175, 390.795, 393.876, 397.593, 398.218, 400.507, 403.879645, 405.411, 407.243645, 408.775, 409.795955, 412.489, 413.069645, 415.763, 416.644631, 419.993, 420.19253, 423.541, 425.4, 428.446, 428.529, 431.575, 431.796, 433.397, 437.775, 440.821, 441.190618, 442.286, 444.739241, 445.595, 450.181, 453.227, 453.31, 456.356, 456.576, 457.806, 460.911867, 466.007, 466.043, 468.4, 469.225, 475.792, 478.164, 481.019, 481.514, 488.081, 488.219, 491.074, 491.433, 493.79, 495.303, 497.66, 498.407, 504.974, 504.784, 506.316, 507.011, 508.729, 509.234, 511.523, 511.682319, 515.435, 516.3, 519.324, 519.484354, 521.638, 521.522563, 523.689, 523.829561, 525.8, 527.332563, 530.088, 529.604141, 531.653, 539.136, 541.024, 542.078, 548.616, 549.241, 555.779, 556.684, 563.222, 563.418357, 569.956, 572.435357, 574.593, 576.896, 583.434, 585.261858, 587.356, 587.840391, 589.343, 589.48, 591.638, 592.1217, 594.292, 594.706, 596.877, 597.431375, 605.594, 605.765, 607.496, 610.704255, 612.926, 613.683, 615.606, 615.985, 619.052, 621.999, 628.537, 629.664, 635.93, 637.349031, 643.887, 646.81, 653.838];
let bass = [0.378997, 1.308, 4.145, 5.075, 8.008, 9.03, 14.072, 15.094, 17.89, 19.155, 24.264, 25.241, 28.082, 29.059, 31.9, 32.877, 36.584, 40.312, 41.225, 42.039, 45.698, 49.426, 50.437, 51.251, 54.255, 55.069, 58.072, 58.943, 63.612, 64.471, 68.821, 72.546, 76.399, 78.912, 79.626693, 82.785, 82.919, 84.565, 85.004, 86.789, 87.462097, 89.123, 91.164818, 94.59, 95.114653, 98.54, 100.036, 102.279, 103.346, 104.992, 112.755, 114.174, 114.022, 118.16, 122.893, 124.684, 129.194, 130.661, 132.67, 137.231, 137.713, 138.332, 142.97, 147.747, 147.829, 149.656, 152.00513, 153.593, 153.869, 158.43, 158.499, 159.382, 163.896, 167.476, 168.755, 170.684, 172.759, 173.378, 177.389, 178.905, 180.415, 181.931, 183.80801, 187.239, 189.585494, 192.61, 196.565809, 200.291, 200.543428, 201.426, 204.292, 206.96, 208.301, 208.71, 212.086, 213.514, 216.496, 218.012, 219.522, 221.038, 223.908, 227.537, 231.16, 238.385, 242.002, 245.631, 247.411, 251.972, 252.545, 256.174, 257.427, 261.988, 263.168, 263.577, 265.022, 265.431, 267.502309, 267.911, 270.671, 277.896, 278.832851, 283.99, 282.60117, 286.481, 285.387872, 289.267, 288.8508, 291.962, 295.566003, 295.833, 298.8, 300.424, 300.753, 305.098, 307.705, 309.812, 310.778, 315.123, 314.813, 317.042, 320.41397, 327.638, 327.91664, 335.428, 339.677, 347.354, 347.602, 354.827, 358.751878, 360.714, 360.741364, 362.132, 362.164644, 364.335, 364.515365, 365.906, 367.372365, 369.329, 369.208, 370.436, 370.462, 374.807, 374.952252, 380.165, 380.272, 381.755, 382.966184, 383.233, 385.901085, 386.168, 389.301, 396.526, 397.452, 401.219, 403.895645, 406.342, 407.205645, 409.652, 409.598645, 412.045, 413.031645, 415.478, 415.615, 417.098, 418.011506, 420.169, 421.657049, 423.815, 423.955, 426.133, 427.084, 429.262, 431.804, 433.98, 436.33, 438.508, 441.1, 444.827, 445.087028, 447.263, 448.736, 450.914, 451.865, 454.043, 456.585, 458.761, 460.939306, 468.232, 468.55, 469.444, 476.189527, 477.083, 477.527, 478.603, 481.27563, 482.169, 487.425, 489.425, 490.521745, 492.521, 494.063, 494.957, 497.81, 498.704, 504.746, 506.641, 506.62, 509.067, 509.229602, 515.456, 516.467237, 518.805, 519.456393, 521.794, 521.671198, 525.798, 527.360436, 529.698, 530.888056, 537.616, 540.783124, 542.013, 545.747, 549.115, 555.952954, 557.182, 559.956828, 564.388, 564.246357, 569.55, 570.267357, 574.853, 582.122656, 585.471, 585.06, 589.646, 590.982613, 594.282, 594.693, 597.993, 603.742974, 604.986, 605.522306, 606.355, 607.4, 611.126, 612.241562, 615.609, 618.879742, 622.247, 625.795372, 628.41, 641.010471, 644.378, 652.001038, 653.84];
let accordion = [35.939, 36.685, 35.939, 36.685, 35.939, 36.685, 35.939, 36.685, 45.152, 45.898, 45.152, 45.898, 45.152, 45.898, 45.152, 45.898, 62.149487, 63.957, 62.161901, 63.969, 74.91125, 78.257, 79.77558, 83.246, 91.581008, 93.015, 91.581008, 93.015, 93.076645, 94.51, 93.076645, 94.51, 94.690581, 96.052, 95.530485, 96.964, 95.530485, 96.964, 97.026122, 98.46, 97.026122, 98.46, 230.046775, 236.565, 230.046775, 236.565, 270.890641, 277.204, 270.908323, 277.222, 271.0758, 277.389, 292.386428, 294.996, 292.386428, 294.996, 292.386428, 294.996, 292.386428, 294.996, 295.755564, 298.991, 299.046008, 300.679, 305.5, 308.109, 305.5, 308.109, 305.5, 308.109, 305.5, 308.109, 307.755, 309.842, 307.771, 309.858, 307.787, 309.874, 320.62686, 326.94, 320.633611, 326.947, 320.650335, 326.964, 320.651294, 326.965, 320.675883, 326.989, 320.780246, 327.094, 336.802081, 339.74, 336.802081, 339.74, 336.802081, 339.74, 336.802081, 339.74, 339.763294, 345.341, 339.763294, 345.341, 347.764809, 350.006, 347.764809, 350.006, 356.990813, 360.776, 361.083915, 364.395, 364.681289, 368.383, 402.087522, 402.193, 402.212349, 402.318, 402.330678, 402.436, 402.468984, 402.574, 402.587313, 402.693, 402.711306, 402.817, 402.836133, 402.942, 402.954462, 403.06, 403.078454, 403.184, 403.216675, 403.322, 403.341502, 403.447, 403.46, 403.565, 403.583824, 403.689, 403.715445, 403.821, 403.849775, 403.955, 403.957767, 404.063, 406.041158, 406.087, 406.116908, 406.162, 406.2, 406.245, 406.275314, 406.321, 406.35857, 406.404, 406.43432, 406.48, 406.516328, 406.562, 406.6, 406.646, 406.7, 406.745, 406.783018, 406.829, 406.865675, 406.911, 406.925402, 406.971, 406.984625, 407.03, 407.060374, 407.106, 407.142383, 407.179, 407.20211, 407.222, 408.813766, 408.837, 408.882648, 408.906, 408.957812, 408.981, 409.026695, 409.05, 409.102404, 409.126, 409.171287, 409.195, 409.245861, 409.269, 409.322029, 409.346, 409.412208, 409.436, 409.488376, 409.512, 409.563539, 409.587, 411.669351, 411.733, 411.742236, 411.806, 411.821767, 411.885, 411.894652, 411.958, 412.024562, 412.088, 412.097447, 412.161, 412.176979, 412.24, 412.25, 412.313, 412.33, 412.393, 412.402858, 412.466, 412.481766, 412.545, 412.562359, 412.626, 412.657778, 412.721, 412.738372, 412.802, 412.817903, 412.881, 412.875372, 412.939, 412.932356, 412.996, 413.005241, 413.069, 413.084149, 413.139, 413.141617, 413.18, 415.226097, 415.934, 415.226097, 415.934, 415.226097, 415.934, 415.226097, 415.934, 415.226097, 415.934, 419.634204, 421.753, 419.634204, 421.753, 419.642641, 421.761, 419.642641, 421.761, 423.279747, 424.953, 423.279747, 424.953, 423.288184, 424.962, 423.288184, 424.962, 430.780735, 431.963, 430.780735, 431.958, 440.12, 441.223, 440.12, 441.218, 455.542731, 456.652, 455.542731, 456.647, 460.618974, 461.171, 460.618974, 461.171, 460.618974, 461.171, 460.618974, 461.171, 460.618974, 461.171, 460.618974, 461.171, 505.88577, 507.027, 505.88577, 507.027, 505.88577, 507.027, 505.88577, 507.027, 505.88577, 507.027, 507.764486, 509.486, 507.764486, 509.486, 507.764486, 509.486, 507.764486, 509.486, 507.764486, 509.486, 509.41, 515.474, 509.41, 515.474, 509.412498, 515.477, 509.412498, 515.477, 516.680159, 519.407, 516.680159, 519.407, 516.680159, 519.407, 516.680159, 519.407, 516.680159, 519.407, 519.473655, 521.231, 519.473655, 521.231, 519.473655, 521.231, 519.473655, 521.231, 519.473655, 521.231, 521.551858, 526.105, 521.551858, 526.105, 521.593594, 525.916, 521.593594, 525.916, 527.424062, 530.151, 527.424062, 530.151, 527.424062, 530.151, 527.424062, 530.151, 527.424062, 530.151, 531.209112, 539.274, 531.209112, 539.274, 541.898425, 542.401, 546.04, 547.439, 549.207936, 556.401, 549.232818, 556.426, 549.237034, 556.431, 549.237034, 556.431, 549.25425, 556.448];

var json = require('./input.json');

console.log(accordion.length);

for (let i = 0 ; i < 372; i++) {

  if((i % 2) == 0) {
   

    fs.appendFile('/Users/jonathanbell/Documents/GitHub/partitur/public/gen-inscore/eff.txt', 
   
    "/ITL/scene/cursor watch timeEnter " + accordion[i] + " " + accordion[i+1]  +  " (" +  "\n" +

    "   /ITL/scene event " +  json.segments[(i+3)%60].effect.join(" ")  + "\n" +

    ");" +  "\n" +  "\n"
    , 
    function (err) {
        if (err) throw err;
      });



  }
  
  // if the number is odd
  else {
    

    fs.appendFile('/Users/jonathanbell/darmstadt/inscore-generation/eff.txt', 
   
    "/ITL/scene/cursor watch timeEnter " + accordion[i] + " " + accordion[i+1]  +  " (" +  "\n" +

    "/ITL/scene event CUT "   + "\n" +

    ");" +  "\n" +  "\n"
    , 
    function (err) {
        if (err) throw err;
      });

  };

  
  }


